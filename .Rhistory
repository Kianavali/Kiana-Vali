install.packages("carData")
library(carData)
data(Davis)
head(Davis)
library(ggplot2)
ggplot(Davis, aes(x = height)) +
geom_histogram(binwidth = 2, fill = "steelblue", color = "black") +
labs(title = "Histogram of Reported Heights",
x = "Height (inches)",
y = "Frequency") +
theme_minimal()
data("diamonds")
head (diamonds)
summary(diamonds)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
+     geom_point(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, color = clarity))
geom_point(mapping = aes(x = carat, y = price, color = clarity))
geom_point(mapping = aes(x = carat, y = price, color = clarity))
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), color = "red")
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, size = clarity))
ggplot(data = diamonds) +
+     geom_point(mapping = aes(x = carat, y = price), color = "red")
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), color = "red")
ggplot("diamonds") +
geom_point(mapping = aes(x = carate, y = price, size = clarity)), color = "blue"
ggplot("diamonds") +
geom_point(mapping = aes(x = carate, y = price, size = clarity), color = "blue")
ggplot("diamonds") +
geom_point(mapping = aes(x = carate, y = price, size = clarity)), color = "blue")
ggplot("diamonds") +
geom_point(mapping = aes(x = carate, y = price, size = clarity)), color = "blue")
ggplot("diamonds") +
geom_point(mapping = aes(x = carate, y = price, size = clarity), color = "blue")
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carate, y = price, size = clarity), color = "blue")
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price, size = clarity), color = "blue")
geom_point(mapping = aes(x = carat, y = price), size = 4.5
ggplot(data = diamonds) +
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), size = 4.5)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), size = 3.5)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), shape = 18)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), size = 4.5, shape = 18)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), shape = 18)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price), color= "red", shape = 18)
ggplot(data = diamonds) +
geom_point(mapping = aes(x = carat, y = price)) +
# facet by clarity
facet_wrap(~clarity, nrow = 2)
ggplot(data = diamonds) +
geom_histogram(mapping =  aes(carat))
ggplot(data = diamonds) +
geom_bar(mapping = aes(cut))
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = color, y = price))
ggplot(data = diamonds) +
geom_boxplot(mapping = aes(x = color, y = price), fill = "red")
ggplot(diamonds) +
geom_bar(aes(x = clarity, fill = cut))
ggplot(diamonds) +
geom_bar(aes(x = clarity, fill = cut))+
# manually control colors used
scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4"))
ggplot(diamonds) +
# fill scales to 100%
geom_bar(aes(x = clarity, fill = cut), position = "fill") +
scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4"))
ggplot(diamonds) +
# dodge rather than stack produces grouped bar plot
geom_bar(aes(x = clarity, fill = cut), position = "dodge") +
scale_fill_manual(values = c("red", "orange", "darkgreen", "dodgerblue", "purple4"))
library(ggplot2)
ggplot(diamonds, )
getwd()
setwd("C:\Users\kvalikor\OneDrive - University of Oklahoma\Documents\GitHub\Kiana-Vali")
setwd("C\Users\kvalikor\OneDrive - University of Oklahoma\Documents\GitHub\Kiana-Vali")
setwd(C:\Users\kvalikor\OneDrive - University of Oklahoma\Documents\GitHub\Kiana-Vali)
setwd("C:\Users\kvalikor\OneDrive - University of Oklahoma\Documents\GitHub\Kiana-Vali")
getwd()
setwd("~/GitHub/Kiana-Vali")
getwd()
?
# Define your curated inflammatory gene list
inflammatory_genes <- c("Il1b", "Tnf", "Il6", "Ccl2", "Cxcl10",
"Cd74", "Cd274", "H2-Ab1", "Tap1", "Icam1", "Vcam1")
# Filter your already-filtered DEG data for just these genes
inflamm_subset <- filtered_deg %>%
filter(gene_symbol %in% inflammatory_genes)
#read data file
library(readxl)
DEG_data <- read_excel("DEG_All_Condition_All_CellType 1.xlsx", sheet = 1)
# Define your curated inflammatory gene list
inflammatory_genes <- c("Il1b", "Tnf", "Il6", "Ccl2", "Cxcl10",
"Cd74", "Cd274", "H2-Ab1", "Tap1", "Icam1", "Vcam1")
# Filter your already-filtered DEG data for just these genes
inflamm_subset <- filtered_deg %>%
filter(gene_symbol %in% inflammatory_genes)
#read data file
library(readxl)
DEG_data <- read_excel("DEG_All_Condition_All_CellType 1.xlsx", sheet = 1)
library(dplyr)
# Define the cell types you want to keep
cell_types <- c("Endothelial_cells", "Microglia", "Macrophages", "T_memory_cells")
# Filter the DEG dataset to keep only these 2 cell types
filtered_deg <- DEG_data %>%
filter(Cluster %in% cell_types)
# Check how many gene comparisons exist for each selected cell type
table(filtered_deg$Cluster)
# Define your curated inflammatory gene list
inflammatory_genes <- c("Il1b", "Tnf", "Il6", "Ccl2", "Cxcl10",
"Cd74", "Cd274", "H2-Ab1", "Tap1", "Icam1", "Vcam1")
# Filter your already-filtered DEG data for just these genes
inflamm_subset <- filtered_deg %>%
filter(gene_symbol %in% inflammatory_genes)
# View the resulting data (optional)
print(inflamm_subset)
# View the resulting data (optional)
inflamm_subset
library(ggplot2)
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol)) +
geom_point(aes(size = abs(avg_log2FC), color = avg_log2FC)) +
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Inflammatory Gene Expression (Aged vs. Young)",
x = "Cell Type", y = "Gene",
size = "|log2FC|", color = "log2FC") +
theme_minimal()
library(ggplot2)
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol)) +
geom_point(aes(size = abs(avg_log2FC), color = avg_log2FC)) +
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Inflammatory Gene Expression (Aged vs. Young)",
x = "Cell Type", y = "Gene",
size = "|log2FC|", color = "log2FC") +
theme_minimal()
library(dplyr)
# Define the cell types you want to keep
cell_types <- c("Endothelial_cells", "Macrophages", "T_memory_cells")
# Filter the DEG dataset to keep only these 2 cell types
filtered_deg <- DEG_data %>%
filter(Cluster %in% cell_types)
# Check how many gene comparisons exist for each selected cell type
table(filtered_deg$Cluster)
young_vs_aged <- filtered_deg %>%
filter(ident.1 == "G2_old", ident.2 == "G1_young")
table(young_vs_aged$Cluster)
# Define your curated inflammatory gene list
inflammatory_genes <- c("Il1b", "Tnf", "Il6", "Ccl2", "Cxcl10",
"Cd74", "Cd274", "H2-Ab1", "Tap1", "Icam1", "Vcam1")
# Filter your already-filtered DEG data for just these genes
inflamm_subset <- filtered_deg %>%
filter(gene_symbol %in% inflammatory_genes)
# View the resulting data (optional)
inflamm_subset
library(ggplot2)
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol)) +
geom_point(aes(size = abs(avg_log2FC), color = avg_log2FC)) +
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Inflammatory Gene Expression (Aged vs. Young)",
x = "Cell Type", y = "Gene",
size = "|log2FC|", color = "log2FC") +
theme_minimal()
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol)) +
geom_point(aes(size = abs(avg_log2FC), color = avg_log2FC)) +
scale_color_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0) +
labs(title = "Inflammatory Gene Expression (Aged vs. Young)",
x = "Cell Type", y = "Gene",
size = "|log2FC|", color = "log2FC") +
theme_minimal()
library(tidyr)
# Convert to wide format: genes as rows, cell types as columns
heatmap_matrix <- inflamm_subset_focus %>%
select(gene_symbol, Cluster, avg_log2FC) %>%
pivot_wider(names_from = Cluster, values_from = avg_log2FC) %>%
column_to_rownames("gene_symbol")
library(tidyr)
# Convert to wide format: genes as rows, cell types as columns
heatmap_matrix <- inflamm_subset_focus %>%
select(gene_symbol, Cluster, avg_log2FC) %>%
pivot_wider(names_from = Cluster, values_from = avg_log2FC) %>%
column_to_rownames("gene_symbol")
# Pivot wider
heatmap_matrix <- inflamm_subset_focus %>%
select(gene_symbol, Cluster, avg_log2FC) %>%
pivot_wider(names_from = Cluster, values_from = avg_log2FC)
# Load necessary libraries
library(tidyr)
library(dplyr)
library(pheatmap)
install.packages("pheatmap")
# Load necessary libraries
library(tidyr)
library(dplyr)
library(pheatmap)
# Pivot to wide format (genes as rows, cell types as columns)
heatmap_matrix <- inflamm_subset %>%
select(gene_symbol, Cluster, avg_log2FC) %>%
pivot_wider(names_from = Cluster, values_from = avg_log2FC)
# Convert to data frame and set gene names as rownames
heatmap_matrix <- as.data.frame(heatmap_matrix)
rownames(heatmap_matrix) <- heatmap_matrix$gene_symbol
heatmap_matrix <- heatmap_matrix[, -1]  # drop gene_symbol column
# Create heatmap
pheatmap(heatmap_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
main = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
fontsize_row = 10,
fontsize_col = 10,
cluster_rows = TRUE,
cluster_cols = FALSE)
# Plot heatmap
pheatmap(heatmap_matrix,
color = colorRampPalette(c("blue", "white", "red"))(100),
main = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
fontsize_row = 10,
fontsize_col = 10,
cluster_rows = TRUE,
cluster_cols = FALSE)
library(tidyr)
library(dplyr)
library(pheatmap)
# Pivot to wide format (genes as rows, clusters as columns)
heatmap_matrix <- inflamm_subset %>%
select(gene_symbol, Cluster, avg_log2FC) %>%
pivot_wider(names_from = Cluster, values_from = avg_log2FC)
# Drop gene_symbol and convert to numeric matrix
rownames(heatmap_matrix) <- heatmap_matrix$gene_symbol
heatmap_matrix <- heatmap_matrix[, -1]  # remove gene_symbol column
# Ensure matrix is numeric and no weird list columns
heatmap_matrix <- as.matrix(sapply(heatmap_matrix, as.numeric))
library(tidyr)
library(dplyr)
library(pheatmap)
# Pivot to wide format: genes as rows, clusters as columns
heatmap_matrix <- inflamm_subset %>%
select(gene_symbol, Cluster, avg_log2FC) %>%
pivot_wider(names_from = Cluster, values_from = avg_log2FC)
# Convert to data frame and remove gene_symbol column
rownames(heatmap_matrix) <- heatmap_matrix$gene_symbol
heatmap_matrix <- heatmap_matrix[, -1]
# Explicitly convert to numeric matrix (avoids list issues)
heatmap_matrix <- data.matrix(heatmap_matrix)
library(ggplot2)
# Plot heatmap using ggplot
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "log2FC") +
labs(title = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
library(ggplot2)
# Plot heatmap using ggplot
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "log2FC") +
labs(title = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
# Define your curated inflammatory gene list
inflammatory_genes_extended <- c("Il1b", "Il6", "Tnf", "Ifng", "Ccl2", "Ccl3", "Ccl4", "Cxcl9", "Cxcl10","Cd74", "Cd80", "Cd86", "Cd274", "Pdcd1lg2", "H2-Ab1", "H2-Aa", "H2-Eb1","Tap1", "Tapbp", "Icam1", "Vcam1", "Sele", "Sell", "Lyz2", "Nos2", "Ptprc")
# Filter your already-filtered DEG data for just these genes
inflamm_subset <- filtered_deg %>%
filter(gene_symbol %in% inflammatory_genes)
# View the resulting data (optional)
inflamm_subset
library(ggplot2)
# Plot heatmap using ggplot
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "log2FC") +
labs(title = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
library(ggplot2)
# Plot heatmap using ggplot
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "log2FC") +
labs(title = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
# Define your curated inflammatory gene list
inflammatory_genes_extended <- c("Il1b", "Il6", "Tnf", "Ifng", "Ccl2", "Ccl3", "Ccl4", "Cxcl9", "Cxcl10","Cd74", "Cd80", "Cd86", "Cd274", "Pdcd1lg2", "H2-Ab1", "H2-Aa", "H2-Eb1","Tap1", "Tapbp", "Icam1", "Vcam1", "Sele", "Sell", "Lyz2", "Nos2", "Ptprc")
# Filter your already-filtered DEG data for just these genes
inflamm_subset <- filtered_deg %>%
filter(gene_symbol %in% inflammatory_genes)
# View the resulting data (optional)
inflamm_subset
library(dplyr)
library(ggplot2)
# Step 1: Broader inflammation/immune gene panel
inflammatory_genes <- c(
"Il1b", "Il6", "Tnf", "Ifng",
"Ccl2", "Ccl3", "Ccl4", "Cxcl9", "Cxcl10",
"Cd74", "Cd80", "Cd86", "Cd274", "Pdcd1lg2",
"H2-Ab1", "H2-Aa", "H2-Eb1", "Tap1", "Tapbp",
"Icam1", "Vcam1", "Sele", "Sell",
"Lyz2", "Nos2", "Ptprc"
)
# Step 2: Filter for the genes and relevant cell types
cell_types_focus <- c("Endothelial_cells", "Macrophages", "T_memory_cells")
inflamm_subset <- DEG_data %>%
filter(Cluster %in% cell_types_focus,
gene_symbol %in% inflammatory_genes,
ident.1 == "G2_old", ident.2 == "G1_young")  # ensure aged vs young only
# Step 3: Plot as ggplot heatmap
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "log2FC") +
labs(title = "Log2 Fold Change of Broad Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
library(dplyr)
library(ggplot2)
# Step 1: Broader inflammation/immune gene panel
inflammatory_genes <- c(
"Il1b", "Il6", "Tnf", "Ifng",
"Ccl2", "Ccl3", "Ccl4", "Cxcl9", "Cxcl10",
"Cd74", "Cd80", "Cd86", "Cd274", "Pdcd1lg2",
"H2-Ab1", "H2-Aa", "H2-Eb1", "Tap1", "Tapbp",
"Icam1", "Vcam1", "Sele", "Sell",
"Lyz2", "Nos2", "Ptprc"
)
# Step 2: Filter for the genes and relevant cell types
cell_types_focus <- c("Endothelial_cells", "Macrophages", "T_memory_cells")
inflamm_subset <- DEG_data %>%
filter(Cluster %in% cell_types_focus,
gene_symbol %in% inflammatory_genes,
ident.1 == "G2_old", ident.2 == "G1_young")  # ensure aged vs young only
# Step 3: Plot as ggplot heatmap
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "log2FC") +
labs(title = "Log2 Fold Change of Broad Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
#read data file
library(readxl)
DEG_data <- read_excel("DEG_All_Condition_All_CellType 1.xlsx", sheet = 1)
library(dplyr)
# Define the cell types you want to keep
cell_types <- c("Endothelial_cells", "Macrophages", "T_memory_cells")
# Filter the DEG dataset to keep only these 2 cell types
filtered_deg <- DEG_data %>%
filter(Cluster %in% cell_types)
# Check how many gene comparisons exist for each selected cell type
table(filtered_deg$Cluster)
young_vs_aged <- filtered_deg %>%
filter(ident.1 == "G2_old", ident.2 == "G1_young")
table(young_vs_aged$Cluster)
library(dplyr)
library(ggplot2)
# Step 1: Broader inflammation/immune gene panel
inflammatory_genes <- c(
"Il1b", "Il6", "Tnf", "Ifng",
"Ccl2", "Ccl3", "Ccl4", "Cxcl9", "Cxcl10",
"Cd74", "Cd80", "Cd86", "Cd274", "Pdcd1lg2",
"H2-Ab1", "H2-Aa", "H2-Eb1", "Tap1", "Tapbp",
"Icam1", "Vcam1", "Sele", "Sell",
"Lyz2", "Nos2", "Ptprc"
)
# Step 2: Filter for the genes and relevant cell types
cell_types_focus <- c("Endothelial_cells", "Macrophages", "T_memory_cells")
inflamm_subset <- DEG_data %>%
filter(Cluster %in% cell_types_focus,
gene_symbol %in% inflammatory_genes,
ident.1 == "G2_old", ident.2 == "G1_young")  # ensure aged vs young only
# Step 3: Plot as ggplot heatmap
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(low = "blue", mid = "white", high = "red", midpoint = 0,
name = "log2FC") +
labs(title = "Log2 Fold Change of Broad Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
panel.grid = element_blank())
inflamm_subset %>%
filter(gene_symbol == "Tnf")
## Gene Function Summary
These genes were selected for their roles in inflammation, immune regulation, or endothelial interactions relevant to brain aging:
