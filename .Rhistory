# Read data file
library(readxl)
DEG_data <- read_excel("DEG_All_Condition_All_CellType 1.xlsx", sheet = 1)
# Load necessary packages
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
#look at the data
head (DEG_data)
# Count number of entries per cell type (Cluster column)
all_cell_counts <- DEG_data %>%
group_by(Cluster) %>%
summarise(Count = n())
# Overview bar plot
ggplot(all_cell_counts, aes(x = reorder(Cluster, -Count), y = Count, fill = Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Overview of All Cell Types in DEG Dataset",
x = "Cell Type", y = "Number of Entries") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
# Define cell types I want to keep
cell_types <- c("Endothelial_cells", "Macrophages", "T_memory_cells")
# Filter the DEG dataset to keep only these 3 cell types
filtered_deg <- DEG_data %>%
filter(Cluster %in% cell_types)
# only young vs. aged
young_vs_aged <- filtered_deg %>%
filter(ident.1 == "G2_old", ident.2 == "G1_young")
table(young_vs_aged$Cluster)
# Filter for endothelial cells aged vs young
endo_deg <- DEG_data %>%
filter(Cluster == "Endothelial_cells",
ident.1 == "G2_old", ident.2 == "G1_young") %>%
mutate(log10_pval = -log10(p_val_adj),
regulation = case_when(
p_val_adj < 0.05 & avg_log2FC > 1 ~ "Upregulated",
p_val_adj < 0.05 & avg_log2FC < -1 ~ "Downregulated",
TRUE ~ "Not significant"
))
# Plot
ggplot(endo_deg, aes(x = avg_log2FC, y = log10_pval)) +
geom_point(aes(color = regulation), alpha = 0.7, size = 2) +
scale_color_manual(values = c(
"Upregulated" = "firebrick2",
"Downregulated" = "dodgerblue3",
"Not significant" = "grey70"
)) +
labs(title = "Volcano Plot: Endothelial Cells (Aged vs Young)",
x = "log2 Fold Change",
y = "-log10 Adjusted p-value",
color = "Regulation") +
theme_minimal(base_size = 13) +
theme(legend.position = "top")
# Filter for macrophages aged vs young
macrophage_deg <- DEG_data %>%
filter(Cluster == "Macrophages",
ident.1 == "G2_old", ident.2 == "G1_young") %>%
mutate(log10_pval = -log10(p_val_adj),
regulation = case_when(
p_val_adj < 0.05 & avg_log2FC > 1 ~ "Upregulated",
p_val_adj < 0.05 & avg_log2FC < -1 ~ "Downregulated",
TRUE ~ "Not significant"
))
# Plot
ggplot(macrophage_deg, aes(x = avg_log2FC, y = log10_pval)) +
geom_point(aes(color = regulation), alpha = 0.7, size = 2) +
scale_color_manual(values = c(
"Upregulated" = "firebrick2",
"Downregulated" = "dodgerblue3",
"Not significant" = "grey70"
)) +
labs(title = "Volcano Plot: Macrophages (Aged vs Young)",
x = "log2 Fold Change",
y = "-log10 Adjusted p-value",
color = "Regulation") +
theme_minimal(base_size = 13) +
theme(legend.position = "top")
# Define top 5 DEGs per cluster
top5_combined <- DEG_data %>%
filter(Cluster %in% c("Endothelial_cells", "Macrophages", "T_memory_cells"),
ident.1 == "G2_old", ident.2 == "G1_young",
!is.na(avg_log2FC), !is.na(p_val_adj),
p_val_adj < 0.05,
abs(avg_log2FC) > 1,
!grepl("^Gm|^Rik|^ENSMUSG", gene_symbol)) %>%
mutate(score = abs(avg_log2FC) * -log10(p_val_adj),
display_gene = ifelse(is.na(gene_symbol) | gene_symbol == "", gene, gene_symbol),
direction = case_when(
avg_log2FC > 1  ~ "Up (old vs young)",
avg_log2FC < -1 ~ "Down (old vs young)"
)) %>%
group_by(Cluster, direction) %>%
slice_max(order_by = score, n = 5, with_ties = FALSE) %>%
ungroup()
# Plot
ggplot(top5_combined,
aes(x = fct_reorder(display_gene, avg_log2FC),
y = avg_log2FC,
color = direction)) +
geom_point(size = 3) +
geom_segment(aes(xend = display_gene, y = 0, yend = avg_log2FC),
size = 0.6) +
facet_wrap(~ Cluster, scales = "free_y") +
coord_flip() +
scale_color_manual(values = c("Up (old vs young)" = "firebrick2",
"Down (old vs young)" = "dodgerblue3")) +
labs(title = "Top 5 Up & Down DEGs per Cell Type",
x = "Gene", y = "log2FC (old vs young)", color = "") +
theme_minimal(base_size = 12) +
theme(legend.position = "top")
# Step 1: Define inflammatory/immune gene panel
inflammatory_genes <- c(
"Il1b", "Il6", "Tnf", "Ifng",
"Ccl2", "Ccl3", "Ccl4", "Cxcl9", "Cxcl10",
"Cd74", "Cd80", "Cd86", "Cd274", "Pdcd1lg2",
"H2-Ab1", "H2-Aa", "H2-Eb1", "Tap1", "Tapbp",
"Icam1", "Vcam1", "Sele", "Sell",
"Lyz2", "Nos2", "Ptprc",
"March1", "Marchf1", "Fam49b", "Qki", "Niban1"
)
# Step 2: Filter DEG data
inflamm_subset <- DEG_data %>%
filter(
Cluster %in% cell_types,
gene_symbol %in% inflammatory_genes,
ident.1 == "G2_old", ident.2 == "G1_young",
!is.na(avg_log2FC)
)
# Step 3: Plot heatmap
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red",
midpoint = 0,
limits = c(-10, 10),
oob = scales::squish,
name = "log2FC"
) +
labs(
title = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene"
) +
theme_minimal(base_size = 12) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),
panel.grid = element_blank()
)
# Read data file
library(readxl)
DEG_data <- read_excel("DEG_All_Condition_All_CellType 1.xlsx", sheet = 1)
# Load necessary packages
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
#look at the data
head (DEG_data)
# Count number of entries per cell type (Cluster column)
all_cell_counts <- DEG_data %>%
group_by(Cluster) %>%
summarise(Count = n())
# Overview bar plot
ggplot(all_cell_counts, aes(x = reorder(Cluster, -Count), y = Count, fill = Cluster)) +
geom_bar(stat = "identity") +
labs(title = "Overview of All Cell Types in DEG Dataset",
x = "Cell Type", y = "Number of Entries") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
# Define cell types I want to keep
cell_types <- c("Endothelial_cells", "Macrophages", "T_memory_cells")
# Filter the DEG dataset to keep only these 3 cell types
filtered_deg <- DEG_data %>%
filter(Cluster %in% cell_types)
# only young vs. aged
young_vs_aged <- filtered_deg %>%
filter(ident.1 == "G2_old", ident.2 == "G1_young")
table(young_vs_aged$Cluster)
# Filter for endothelial cells aged vs young
endo_deg <- DEG_data %>%
filter(Cluster == "Endothelial_cells",
ident.1 == "G2_old", ident.2 == "G1_young") %>%
mutate(log10_pval = -log10(p_val_adj),
regulation = case_when(
p_val_adj < 0.05 & avg_log2FC > 1 ~ "Upregulated",
p_val_adj < 0.05 & avg_log2FC < -1 ~ "Downregulated",
TRUE ~ "Not significant"
))
# Plot
ggplot(endo_deg, aes(x = avg_log2FC, y = log10_pval)) +
geom_point(aes(color = regulation), alpha = 0.7, size = 2) +
scale_color_manual(values = c(
"Upregulated" = "firebrick2",
"Downregulated" = "dodgerblue3",
"Not significant" = "grey70"
)) +
labs(title = "Volcano Plot: Endothelial Cells (Aged vs Young)",
x = "log2 Fold Change",
y = "-log10 Adjusted p-value",
color = "Regulation") +
theme_minimal(base_size = 13) +
theme(legend.position = "top")
# Filter for macrophages aged vs young
macrophage_deg <- DEG_data %>%
filter(Cluster == "Macrophages",
ident.1 == "G2_old", ident.2 == "G1_young") %>%
mutate(log10_pval = -log10(p_val_adj),
regulation = case_when(
p_val_adj < 0.05 & avg_log2FC > 1 ~ "Upregulated",
p_val_adj < 0.05 & avg_log2FC < -1 ~ "Downregulated",
TRUE ~ "Not significant"
))
# Plot
ggplot(macrophage_deg, aes(x = avg_log2FC, y = log10_pval)) +
geom_point(aes(color = regulation), alpha = 0.7, size = 2) +
scale_color_manual(values = c(
"Upregulated" = "firebrick2",
"Downregulated" = "dodgerblue3",
"Not significant" = "grey70"
)) +
labs(title = "Volcano Plot: Macrophages (Aged vs Young)",
x = "log2 Fold Change",
y = "-log10 Adjusted p-value",
color = "Regulation") +
theme_minimal(base_size = 13) +
theme(legend.position = "top")
# Define top 5 DEGs per cluster
top5_combined <- DEG_data %>%
filter(Cluster %in% c("Endothelial_cells", "Macrophages", "T_memory_cells"),
ident.1 == "G2_old", ident.2 == "G1_young",
!is.na(avg_log2FC), !is.na(p_val_adj),
p_val_adj < 0.05,
abs(avg_log2FC) > 1,
!grepl("^Gm|^Rik|^ENSMUSG", gene_symbol)) %>%
mutate(score = abs(avg_log2FC) * -log10(p_val_adj),
display_gene = ifelse(is.na(gene_symbol) | gene_symbol == "", gene, gene_symbol),
direction = case_when(
avg_log2FC > 1  ~ "Up (old vs young)",
avg_log2FC < -1 ~ "Down (old vs young)"
)) %>%
group_by(Cluster, direction) %>%
slice_max(order_by = score, n = 5, with_ties = FALSE) %>%
ungroup()
# Plot
ggplot(top5_combined,
aes(x = fct_reorder(display_gene, avg_log2FC),
y = avg_log2FC,
color = direction)) +
geom_point(size = 3) +
geom_segment(aes(xend = display_gene, y = 0, yend = avg_log2FC),
size = 0.6) +
facet_wrap(~ Cluster, scales = "free_y") +
coord_flip() +
scale_color_manual(values = c("Up (old vs young)" = "firebrick2",
"Down (old vs young)" = "dodgerblue3")) +
labs(title = "Top 5 Up & Down DEGs per Cell Type",
x = "Gene", y = "log2FC (old vs young)", color = "") +
theme_minimal(base_size = 12) +
theme(legend.position = "top")
# Step 1: Define inflammatory/immune gene panel
inflammatory_genes <- c(
"Il1b", "Il6", "Tnf", "Ifng",
"Ccl2", "Ccl3", "Ccl4", "Cxcl9", "Cxcl10",
"Cd74", "Cd80", "Cd86", "Cd274", "Pdcd1lg2",
"H2-Ab1", "H2-Aa", "H2-Eb1", "Tap1", "Tapbp",
"Icam1", "Vcam1", "Sele", "Sell",
"Lyz2", "Nos2", "Ptprc",
"March1", "Marchf1", "Fam49b", "Qki", "Niban1"
)
# Step 2: Filter DEG data
inflamm_subset <- DEG_data %>%
filter(
Cluster %in% cell_types,
gene_symbol %in% inflammatory_genes,
ident.1 == "G2_old", ident.2 == "G1_young",
!is.na(avg_log2FC)
)
# Step 3: Plot heatmap
ggplot(inflamm_subset, aes(x = Cluster, y = gene_symbol, fill = avg_log2FC)) +
geom_tile(color = "white") +
scale_fill_gradient2(
low = "blue", mid = "white", high = "red",
midpoint = 0,
limits = c(-10, 10),
oob = scales::squish,
name = "log2FC"
) +
labs(
title = "Log2 Fold Change of Inflammatory Genes (Aged vs. Young)",
x = "Cell Type", y = "Gene"
) +
theme_minimal(base_size = 12) +
theme(
axis.text.x = element_text(angle = 45, hjust = 1, vjust = 1, size = 10),
panel.grid = element_blank()
)
# Count number of entries per cell type (Cluster column)
all_cell_counts <- DEG_data %>%
group_by(Cluster) %>%
summarise(Count = n())
# Load necessary packages
library(tidyverse)
library(dplyr)
library(ggplot2)
library(tidyr)
library(forcats)
# Count number of entries per cell type (Cluster column)
all_cell_counts <- DEG_data %>%
group_by(Cluster) %>%
summarise(Count = n())
# Overview bar plot
ggplot(all_cell_counts, aes(x = reorder(Cluster, -Count), y = Count)) +
geom_bar(stat = "identity") +
labs(title = "Overview of All Cell Types in DEG Dataset",
x = "Cell Type", y = "Number of Entries") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = "none")
